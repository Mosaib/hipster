<!-- <?php

namespace App\Events;

use Illuminate\Broadcasting\Channel;
use Illuminate\Broadcasting\InteractsWithSockets;
use Illuminate\Broadcasting\PresenceChannel;
use Illuminate\Broadcasting\PrivateChannel;
use Illuminate\Contracts\Broadcasting\ShouldBroadcast;
use Illuminate\Foundation\Events\Dispatchable;
use Illuminate\Queue\SerializesModels;
use App\Models\User;


class UserOnline implements ShouldBroadcast
{
    use Dispatchable, SerializesModels;

    public $user;

    /**
     * Create a new event instance.
     */
    public function __construct(User $user)
    {
        $this->user = $user;
    }

    /**
     * Get the channels the event should broadcast on.
     *
     * @return array<int, \Illuminate\Broadcasting\Channel>
     */
    public function broadcastOn()
    {
        if ($this->user->user_type === 'admin') {
            return new PresenceChannel('online-admins');
        }
        return null;
    }

    public function broadcastWith()
    {
         return [
            'user' => [
                'id' => $this->user->id,
                'name' => $this->user->name,
                'user_type' => $this->user->user_type,
                'is_online' => $this->user->is_online,
            ],
        ];
    }



    public function broadcastAs(): string
    {
        return 'ActivityStatusUpdated';
    }
} -->
